name: Deploy

on:
  pull_request:
    branches: [main]
    types:
      - closed
jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets. PASSPHRASE }}
        script: |
          cd ~/backend/
          git checkout main
          git pull
          touch .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} > .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
          echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
          echo REDIS_SRC_HOST=${{ secrets.REDIS_SRC_HOST }} >> .env
          echo REDIS_SRC_PORT=${{ secrets.REDIS_SRC_PORT }} >> .env
          cd ~/infra/
          sudo docker compose stop
          sudo docker container rm cherry_app
          sudo docker image rm cherry_app
          sudo docker build -t cherry_app ../backend/
          sudo docker compose up -d
          sleep 5
          sudo docker exec cherry_app python manage.py makemigrations
          sudo docker exec cherry_app python manage.py migrate
          sudo docker exec cherry_app python manage.py collectstatic --no-input
          sudo docker exec cherry_app python manage.py add_categories